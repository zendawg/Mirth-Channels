<channel>
  <id>60b743ae-a445-456d-b796-9bcb2a650a10</id>
  <name>vfa-data-reader</name>
  <description>Reads in the XML file in short data format produced from a VFA exam.</description>
  <enabled>true</enabled>
  <version>2.2.1.5861</version>
  <lastModified>
    <time>1367258765870</time>
    <timezone>Europe/London</timezone>
  </lastModified>
  <revision>15</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">File Reader</property>
      <property name="FTPAnonymous">1</property>
      <property name="autoDelete">0</property>
      <property name="binary">0</property>
      <property name="charsetEncoding">DEFAULT_ENCODING</property>
      <property name="checkFileAge">1</property>
      <property name="fileAge">1000</property>
      <property name="fileFilter">*.xml</property>
      <property name="host">_OE_VFA_TEXT_IN_</property>
      <property name="ignoreDot">1</property>
      <property name="moveToDirectory"></property>
      <property name="moveToErrorDirectory">_OE_VFA_TEXT_IN_</property>
      <property name="moveToPattern"></property>
      <property name="passive">1</property>
      <property name="password">anonymous</property>
      <property name="pollingFrequency">1000</property>
      <property name="pollingType">interval</property>
      <property name="processBatchFiles">0</property>
      <property name="regex">0</property>
      <property name="scheme">file</property>
      <property name="secure">1</property>
      <property name="sortAttribute">date</property>
      <property name="timeout">10000</property>
      <property name="username">anonymous</property>
      <property name="validateConnections">1</property>
    </properties>
    <transformer>
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>pid (out) &lt;-- DataSet - CZM_HFA_EMR_IOD - Patient_M - patient_id (in)</name>
          <script>tmp[&apos;pid&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patient_id&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;pid&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patient_id&apos;].toString()</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>familyName (out) &lt;-- DataSet - CZM_HFA_EMR_IOD - Patient_M - patients_name - family_name (in)</name>
          <script>tmp[&apos;familyName&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_name&apos;][&apos;family_name&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;familyName&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_name&apos;][&apos;family_name&apos;].toString()</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>givenName (out) &lt;-- DataSet - CZM_HFA_EMR_IOD - Patient_M - patients_name - given_name (in)</name>
          <script>tmp[&apos;givenName&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_name&apos;][&apos;given_name&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;givenName&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_name&apos;][&apos;given_name&apos;].toString()</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>3</sequenceNumber>
          <name>middleName (out) &lt;-- DataSet - CZM_HFA_EMR_IOD - Patient_M - patients_name - middle_name (in)</name>
          <script>tmp[&apos;middleName&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_name&apos;][&apos;middle_name&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;middleName&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_name&apos;][&apos;middle_name&apos;].toString()</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>4</sequenceNumber>
          <name>birthDate (out) &lt;-- DataSet - CZM_HFA_EMR_IOD - Patient_M - patients_birth_date (in)</name>
          <script>tmp[&apos;birthDate&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_birth_date&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;birthDate&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_birth_date&apos;].toString()</string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>5</sequenceNumber>
          <name>gender (out) &lt;-- DataSet - CZM_HFA_EMR_IOD - Patient_M - patients_sex (in)</name>
          <script>tmp[&apos;gender&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_sex&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;gender&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;Patient_M&apos;][&apos;patients_sex&apos;].toString()</string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>6</sequenceNumber>
          <name>fileReference (out) &lt;-- Dataset - CZM_HFA_EMR_IOD - Patient_M - file_reference</name>
          <script>tmp[&apos;fileReference&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;ReferencedImage_M&apos;][&apos;file_reference&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;fileReference&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;ReferencedImage_M&apos;][&apos;file_reference&apos;].toString()</string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>7</sequenceNumber>
          <name>studyDate (out) &lt;-- Dataset - CZM_HFA_EMR_IOD - Patient_M - study_date</name>
          <script>tmp[&apos;studyDate&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;GeneralStudy_M&apos;][&apos;study_date&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;studyDate&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;GeneralStudy_M&apos;][&apos;study_date&apos;].toString()</string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>8</sequenceNumber>
          <name>studyTime (out) &lt;-- Dataset - CZM_HFA_EMR_IOD - Patient_M - study_time</name>
          <script>tmp[&apos;studyTime&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;GeneralStudy_M&apos;][&apos;study_time&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;studyTime&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;GeneralStudy_M&apos;][&apos;study_time&apos;].toString()</string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>9</sequenceNumber>
          <name>eye (out) &lt;-- Dataset - CZM_HFA_EMR_IOD - Patient_M - laterality</name>
          <script>tmp[&apos;eye&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;GeneralSeries_M&apos;][&apos;laterality&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;eye&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;GeneralSeries_M&apos;][&apos;laterality&apos;].toString()</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>10</sequenceNumber>
          <name>testStrategy (out) &lt;-- Dataset - CZM_HFA_EMR_IOD - CZM_HFA_SERIES_M test_strategy</name>
          <script>tmp[&apos;testStrategy&apos;] = validate(msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;CZM_HFA_Series_M&apos;][&apos;test_strategy&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data class="map">
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;testStrategy&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;DataSet&apos;][&apos;CZM_HFA_EMR_IOD&apos;][&apos;CZM_HFA_Series_M&apos;][&apos;test_strategy&apos;].toString()</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxDWk0tWE1MIHhtbG5zPSJo
dHRwOi8vd3d3Lm1lZGl0ZWMuemVpc3MuY29tL2N6bSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3Lncz
Lm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8v
d3d3Lm1lZGl0ZWMuemVpc3MuY29tL0NaTS1YTUwtUm9vdC54c2QiPg0KCTxIZWFkZXI+DQoJCTxj
em1feG1sX3ZlcnNpb24gVlI9IkxPIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2RlSWQ9Ijc3MTEs
MTEwMiIgY29kZU1lYW5pbmc9IkNaTSBYTUwgVmVyc2lvbiI+PC9jem1feG1sX3ZlcnNpb24+DQoJ
CTx1c2VyX25hbWUgVlI9IlNIIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2RlSWQ9Ijc3MTEsMTEw
MyIgY29kZU1lYW5pbmc9IlVzZXIgTmFtZSIvPg0KCQk8c291cmNlX2FldCBWUj0iQUUiIGNvZGlu
Z1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDIsMDAxNiIgY29kZU1lYW5pbmc9IlNvdXJjZSBBcHBs
aWNhdGlvbiBFbnRpdHkgVGl0bGUiPjwvc291cmNlX2FldD4NCgkJPGRlc3RpbmF0aW9uX2FldCBW
Uj0iQUUiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjIxMDAsMDE0MCIgY29kZU1lYW5pbmc9
IkRlc3RpbmF0aW9uIEFwcGxpY2F0aW9uIEVudGl0eSI+PC9kZXN0aW5hdGlvbl9hZXQ+DQoJCTxs
YW5ndWFnZSBWUj0iQ1MiIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0iNzcxMSwxMTEwIiBj
b2RlTWVhbmluZz0iTGFuZ3VhZ2UiLz4NCgkJPGNvdW50cnkgVlI9IkNTIiBjb2RpbmdTY2hlbWU9
Ijk5Q1pNIiBjb2RlSWQ9Ijc3MTEsMTExMSIgY29kZU1lYW5pbmc9IkNvdW50cnkiLz4NCgk8L0hl
YWRlcj4NCjxDb21tYW5kPg0KCTxjem1fY29tbWFuZCBWUj0iQ1MiIGNvZGluZ1NjaGVtZT0iOTlD
Wk0iIGNvZGVJZD0iNzcxMSwxMTAxIiBjb2RlTWVhbmluZz0iQ1pNIENvbW1hbmQiPjwvY3ptX2Nv
bW1hbmQ+DQogICAgPGFmZmVjdGVkX3NvcF9jbGFzc191aWQgVlI9IlVJIiBjb2RpbmdTY2hlbWU9
IkRDTSIgY29kZUlkPSIwMDAwLDAwMDIiIGNvZGVNZWFuaW5nPSJBZmZlY3RlZCBTT1AgQ2xhc3Mg
VUlEIj4xLjIuODI2LjAuMS4zNjgwMDQzLjIuMTM5LjMuMi4yPC9hZmZlY3RlZF9zb3BfY2xhc3Nf
dWlkPg0KCTxhZmZlY3RlZF9zb3BfaW5zdGFuY2VfdWlkIFZSPSJVSSIgY29kaW5nU2NoZW1lPSJE
Q00iIGNvZGVJZD0iMDAwMCwxMDAwIiBjb2RlTWVhbmluZz0iQWZmZWN0ZWQgU09QIEluc3RhbmNl
IFVJRCI+MS4yLjgyNi4wLjEuMzY4MDA0My4yLjEzOS4zLjIuMi43NDAxNTg1MjA3MDkzMDA1NTAx
MzA4ODMwMTQ1NDwvYWZmZWN0ZWRfc29wX2luc3RhbmNlX3VpZD4NCgk8bWVzc2FnZV9pZCBWUj0i
VVMiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDAsMDExMCIgY29kZU1lYW5pbmc9Ik1l
c3NhZ2UgSUQiPjwvbWVzc2FnZV9pZD4NCgk8bWVzc2FnZV9pZF9iZWluZ19yZXNwb25kZWRfdG8g
VlI9IlVTIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDAwLDAxMjAiIGNvZGVNZWFuaW5n
PSJNZXNzYWdlIElEIEJlaW5nIFJlc3BvbmRlZCBUbyIvPg0KCTxwcmlvcml0eSBWUj0iVVMiIGNv
ZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDAsMDcwMCIgY29kZU1lYW5pbmc9IlByaW9yaXR5
Ii8+DQoJPHN0YXR1cyBWUj0iVVMiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDAsMDkw
MCIgY29kZU1lYW5pbmc9IlN0YXR1cyIvPg0KCTxlcnJvcl9jb21tZW50IFZSPSJMTyIgY29kaW5n
U2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwMCwwOTAyIiBjb2RlTWVhbmluZz0iU3RhdHVzIi8+DQoJ
PGVycm9yX2lkIFZSPSJVUyIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwMCwwOTAzIiBj
b2RlTWVhbmluZz0iRXJyb3IgSUQiLz4NCjwvQ29tbWFuZD4NCjxEYXRhU2V0Pg0KICAgIDxDWk1f
SEZBX0VNUl9JT0Q+DQogICAgICAgIDxpb2RfdmVyc2lvbiBWUj0iTE8iIGNvZGluZ1NjaGVtZT0i
OTlDWk0iIGNvZGVJZD0iNzcxMSwxMjAyIiBjb2RlTWVhbmluZz0iSU9EIFZlcnNpb24iPjEuMTwv
aW9kX3ZlcnNpb24+DQoJICAgIDxQYXRpZW50X00+DQoJCSAgICA8cGF0aWVudHNfbmFtZSBWUj0i
UE4iIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMTAsMDAxMCIgY29kZU1lYW5pbmc9IlBh
dGllbnQncyBOYW1lIj4NCgkJCSAgICA8ZmFtaWx5X25hbWU+U0ZHMzEwMzwvZmFtaWx5X25hbWU+
DQoJCQkgICAgPGdpdmVuX25hbWU+U0ZHMzEwMzwvZ2l2ZW5fbmFtZT4NCgkJCSAgICA8bWlkZGxl
X25hbWU+PC9taWRkbGVfbmFtZT4NCgkJCSAgICA8bmFtZV9wcmVmaXg+PC9uYW1lX3ByZWZpeD4N
CgkJCSAgICA8bmFtZV9zdWZmaXg+PC9uYW1lX3N1ZmZpeD4NCgkJICAgIDwvcGF0aWVudHNfbmFt
ZT4NCgkJICAgIDxwYXRpZW50X2lkIFZSPSJMTyIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0i
MDAxMCwwMDIwIiBjb2RlTWVhbmluZz0iUGF0aWVudCBJRCI+U0ZHMzEwMzwvcGF0aWVudF9pZD4N
CiAgICAgICAgICAgIDxpc3N1ZXJfb2ZfcGF0aWVudF9pZCBWUj0iTE8iIGNvZGluZ1NjaGVtZT0i
RENNIiBjb2RlSWQ9IjAwMTAsMDAyMSIgY29kZU1lYW5pbmc9Iklzc3VlciBvZiBQYXRpZW50IElE
Ij48L2lzc3Vlcl9vZl9wYXRpZW50X2lkPg0KCQkgICAgPHBhdGllbnRzX2JpcnRoX2RhdGUgVlI9
IkRBIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDEwLDAwMzAiIGNvZGVNZWFuaW5nPSJQ
YXRpZW50J3MgQmlydGggRGF0ZSI+MTk0Ny0xMi0yMzwvcGF0aWVudHNfYmlydGhfZGF0ZT4NCgkJ
ICAgIDxwYXRpZW50c19zZXggVlI9IkNTIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDEw
LDAwNDAiIGNvZGVNZWFuaW5nPSJQYXRpZW50J3MgU2V4Ij48L3BhdGllbnRzX3NleD4NCgkJICAg
IDxvdGhlcl9wYXRpZW50X2lkcyBWUj0iTE8iIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAw
MTAsMTAwMCIgY29kZU1lYW5pbmc9Ik90aGVyIFBhdGllbnQgSURzIj4NCgkJCSAgICA8dmFsdWU+
PC92YWx1ZT4NCgkJICAgIDwvb3RoZXJfcGF0aWVudF9pZHM+DQoJCSAgICA8cGF0aWVudF9jb21t
ZW50cyBWUj0iTFQiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMTAsNDAwMCIgY29kZU1l
YW5pbmc9IlBhdGllbnQgQ29tbWVudHMiLz4NCgkgICAgPC9QYXRpZW50X00+DQoJICAgIDxHZW5l
cmFsU3R1ZHlfTT4NCgkJICAgIDxzdHVkeV9pbnN0YW5jZV91aWQgVlI9IlVJIiBjb2RpbmdTY2hl
bWU9IkRDTSIgY29kZUlkPSIwMDIwLDAwMEQiIGNvZGVNZWFuaW5nPSJTdHVkeSBJbnN0YW5jZSBV
SUQiPjEuMi44MjYuMC4xLjM2ODAwNDMuMi4xMzkuMy4yLjMuNzQwLjE1ODUyLjIwMTEzMy4xMzE0
NTg8L3N0dWR5X2luc3RhbmNlX3VpZD4NCgkJICAgIDxzdHVkeV9kYXRlIFZSPSJEQSIgY29kaW5n
U2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCwwMDIwIiBjb2RlTWVhbmluZz0iU3R1ZHkgRGF0ZSI+
MjAxMS0wMy0wMzwvc3R1ZHlfZGF0ZT4NCgkJICAgIDxzdHVkeV90aW1lIFZSPSJUTSIgY29kaW5n
U2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCwwMDMwIiBjb2RlTWVhbmluZz0iU3R1ZHkgVGltZSI+
MTM6MTQ6NTguMDAwPC9zdHVkeV90aW1lPg0KCQkgICAgPHJlZmVycmluZ19waHlzaWNpYW5zX25h
bWUgVlI9IlBOIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDA4LDAwOTAiIGNvZGVNZWFu
aW5nPSJSZWZlcnJpbmcgUGh5c2ljaWFuJ3MgTmFtZSI+DQoJCQkgICAgPGZhbWlseV9uYW1lLz4N
CgkJCSAgICA8Z2l2ZW5fbmFtZS8+DQoJCQkgICAgPG1pZGRsZV9uYW1lLz4NCgkJCSAgICA8bmFt
ZV9wcmVmaXgvPg0KCQkJICAgIDxuYW1lX3N1ZmZpeC8+DQoJCSAgICA8L3JlZmVycmluZ19waHlz
aWNpYW5zX25hbWU+DQoJCSAgICA8c3R1ZHlfaWQgVlI9IlNIIiBjb2RpbmdTY2hlbWU9IkRDTSIg
Y29kZUlkPSIwMDIwLDAwMTAiIGNvZGVNZWFuaW5nPSJTdHVkeSBJRCIvPg0KCQkgICAgPGFjY2Vz
c2lvbl9udW1iZXIgVlI9IlNIIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDA4LDAwNTAi
IGNvZGVNZWFuaW5nPSJBY2Nlc3Npb24gTnVtYmVyIj48L2FjY2Vzc2lvbl9udW1iZXI+DQoJCSAg
ICA8cGxhY2VyX29yZGVyX251bWJlcl9pbWFnaW5nX3NlcnZpY2VfcmVxdWVzdCBWUj0iTE8iIGNv
ZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwNDAsMjAxNiIgY29kZU1lYW5pbmc9IlBsYWNlciBP
cmRlciBOdW1iZXIgLyBJbWFnaW5nIFNlcnZpY2UgUmVxdWVzdCI+PC9wbGFjZXJfb3JkZXJfbnVt
YmVyX2ltYWdpbmdfc2VydmljZV9yZXF1ZXN0Pg0KCQkgICAgPHN0dWR5X2Rlc2NyaXB0aW9uIFZS
PSJMTyIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCwxMDMwIiBjb2RlTWVhbmluZz0i
U3R1ZHkgRGVzY3JpcHRpb24iLz4NCgkgICAgPC9HZW5lcmFsU3R1ZHlfTT4NCgkgICAgPEdlbmVy
YWxTZXJpZXNfTT4NCgkJICAgIDxtb2RhbGl0eSBWUj0iQ1MiIGNvZGluZ1NjaGVtZT0iRENNIiBj
b2RlSWQ9IjAwMDgsMDA2MCIgY29kZU1lYW5pbmc9Ik1vZGFsaXR5Ij5DWk1fSEZBPC9tb2RhbGl0
eT4NCgkJICAgIDxzZXJpZXNfaW5zdGFuY2VfdWlkIFZSPSJVSSIgY29kaW5nU2NoZW1lPSJEQ00i
IGNvZGVJZD0iMDAyMCwwMDBFIiBjb2RlTWVhbmluZz0iU2VyaWVzIEluc3RhbmNlIFVJRCI+MS4y
LjgyNi4wLjEuMzY4MDA0My4yLjEzOS4zLjIuMS43NDAxNTg1MjA3MDkzMDA1NTAxMzA4ODMwMTQ1
NTwvc2VyaWVzX2luc3RhbmNlX3VpZD4NCgkJICAgIDxzZXJpZXNfbnVtYmVyIFZSPSJJUyIgY29k
aW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAyMCwwMDExIiBjb2RlTWVhbmluZz0iU2VyaWVzIE51
bWJlciIvPg0KCQkgICAgPGxhdGVyYWxpdHkgVlI9IkNTIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29k
ZUlkPSIwMDIwLDAwNjAiIGNvZGVNZWFuaW5nPSJMYXRlcmFsaXR5Ij5SPC9sYXRlcmFsaXR5Pg0K
CQkgICAgPHNlcmllc19kYXRlIFZSPSJEQSIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAw
OCwwMDIxIiBjb2RlTWVhbmluZz0iU2VyaWVzIERhdGUiPjIwMTEtMDYtMjM8L3Nlcmllc19kYXRl
Pg0KCQkgICAgPHNlcmllc190aW1lIFZSPSJUTSIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0i
MDAwOCwwMDMxIiBjb2RlTWVhbmluZz0iU2VyaWVzIFRpbWUiPjExOjU1OjUwLjAwMDwvc2VyaWVz
X3RpbWU+DQoJCSAgICA8cGVyZm9ybWluZ19waHlzaWNpYW5zX25hbWUgY29kaW5nU2NoZW1lPSJE
Q00iIGNvZGVJZD0iMDAwOCwxMDUwIiBjb2RlTWVhbmluZz0iUGVyZm9ybWluZyBQaHlzaWNpYW4n
cyBOYW1lIj4NCgkJCSAgICA8dmFsdWU+DQoJCQkJICAgIDxmYW1pbHlfbmFtZS8+DQoJCQkJICAg
IDxnaXZlbl9uYW1lLz4NCgkJCQkgICAgPG1pZGRsZV9uYW1lLz4NCgkJCQkgICAgPG5hbWVfcHJl
Zml4Lz4NCgkJCQkgICAgPG5hbWVfc3VmZml4Lz4NCgkJCSAgICA8L3ZhbHVlPg0KCQkgICAgPC9w
ZXJmb3JtaW5nX3Boeu+/vR7vv71zaWNpYW5zX25hbWU+DQoJCSAgICA8Y29tbWVudHNfb25fdGhl
X3BlcmZvcm1lZF9wcm9jZWR1cmVfc3RlcCBWUj0iU1QiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2Rl
SWQ9IjAwNDAsMDI4MCIgY29kZU1lYW5pbmc9IkNvbW1lbnRzIG9uIHRoZSBQZXJmb3JtZWQgUHJv
Y2VkdXJlIFN0ZXAiPjwvY29tbWVudHNfb25fdGhlX3BlcmZvcm1lZF9wcm9jZWR1cmVfc3RlcD4N
CgkgICAgPC9HZW5lcmFsU2VyaWVzX00+DQoJICAgIDxHZW5lcmFsRXF1aXBtZW50X00+DQoJCSAg
ICA8bWFudWZhY3R1cmVyIFZSPSJMTyIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCww
MDcwIiBjb2RlTWVhbmluZz0iTWFudWZhY3R1cmVyIj5DYXJsIFplaXNzIE1lZGl0ZWMgSW5jLjwv
bWFudWZhY3R1cmVyPg0KCQkgICAgPHN0YXRpb25fbmFtZSBWUj0iU0giIGNvZGluZ1NjaGVtZT0i
RENNIiBjb2RlSWQ9IjAwMDgsMTAxMCIgY29kZU1lYW5pbmc9IlN0YXRpb24gTmFtZSI+PC9zdGF0
aW9uX25hbWU+DQoJCSAgICA8bWFudWZhY3R1cmVyc19tb2RlbF9uYW1lIFZSPSJMTyIgY29kaW5n
U2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCwxMDkwIiBjb2RlTWVhbmluZz0iTWFudWZhY3R1cmVy
J3MgTW9kZWwgTmFtZSI+NzQwPC9tYW51ZmFjdHVyZXJzX21vZGVsX25hbWU+DQoJCSAgICA8ZGV2
aWNlX3NlcmlhbF9udW1iZXIgVlI9IkxPIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDE4
LDEwMDAiIGNvZGVNZWFuaW5nPSJEZXZpY2UgU2VyaWFsIE51bWJlciI+MTU4NTI8L2RldmljZV9z
ZXJpYWxfbnVtYmVyPg0KCQkgICAgPHNvZnR3YXJlX3ZlcnNpb25zIFZSPSJMTyIgY29kaW5nU2No
ZW1lPSJEQ00iIGNvZGVJZD0iMDAxOCwxMDIwIiBjb2RlTWVhbmluZz0iU29mdHdhcmUgVmVyc2lv
bnMiPg0KCQkJICAgIDx2YWx1ZT40LjIgPC92YWx1ZT4NCgkJICAgIDx2YWx1ZT43NDAtMTU4NTIg
NC4yPC92YWx1ZT4NCjwvc29mdHdhcmVfdmVyc2lvbnM+DQoJICAgIDwvR2VuZXJhbEVxdWlwbWVu
dF9NPg0KCSAgICA8U09QQ29tbW9uX00+DQoJCSAgICA8c29wX2luc3RhbmNlX3VpZCBWUj0iVUki
IGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDgsMDAxOCIgY29kZU1lYW5pbmc9IlNPUCBJ
bnN0YW5jZSBVSUQiPjEuMi44MjYuMC4xLjM2ODAwNDMuMi4xMzkuMy4yLjIuNzQwMTU4NTIwNzA5
MzAwNTUwMTMwODgzMDE0NTY8L3NvcF9pbnN0YW5jZV91aWQ+DQoJCSAgICA8aW5zdGFuY2VfY3Jl
YXRpb25fZGF0ZSBWUj0iREEiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDgsMDAxMiIg
Y29kZU1lYW5pbmc9Ikluc3RhbmNlIENyZWF0aW9uIERhdGUiPjIwMTEtMDYtMjM8L2luc3RhbmNl
X2NyZWF0aW9uX2RhdGU+DQoJCSAgICA8aW5zdGFuY2VfY3JlYXRpb25fdGltZSBWUj0iVE0iIGNv
ZGluZ1NjaGVtZT0iRENNIiBjb2RlSWQ9IjAwMDgsMDAxMyIgY29kZU1lYW5pbmc9Ikluc3RhbmNl
IENyZWF0aW9uIFRpbWUiPjExOjU1OjUwLjAwMDwvaW5zdGFuY2VfY3JlYXRpb25fdGltZT4NCgkJ
ICAgIDxpbnN0YW5jZV9jcmVhdG9yX3VpZCBWUj0iVUkiIGNvZGluZ1NjaGVtZT0iRENNIiBjb2Rl
SWQ9IjAwMDgsMDAxNCIgY29kZU1lYW5pbmc9Ikluc3RhbmNlIENyZWF0b3IgVUlEIi8+DQoJCSAg
ICA8aW5zdGFuY2VfbnVtYmVyIFZSPSJJUyIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAy
MCwwMDEzIiBjb2RlTWVhbmluZz0iSW5zdGFuY2UgTnVtYmVyIi8+DQoJICAgIDwvU09QQ29tbW9u
X00+DQoJICAgIDxDWk1fSEZBX1Nlcmllc19NPg0KCQkgICAgPHRlc3RfZGF0ZSBWUj0iREEiIGNv
ZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0iNzcxNywxNzMyIiBjb2RlTWVhbmluZz0iVGVzdCBE
YXRlIj4yMDExLTAzLTAzPC90ZXN0X2RhdGU+DQoJCSAgICA8dGVzdF90aW1lIFZSPSJUTSIgY29k
aW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MzMiIGNvZGVNZWFuaW5nPSJUZXN0IFRp
bWUiPjEzOjE0OjU4LjAwMDwvdGVzdF90aW1lPg0KCQkgICAgPHRlc3RfbmFtZSBWUj0iTE8iIGNv
ZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0iNzcxNywxNzAxIiBjb2RlTWVhbmluZz0iVGVzdCBO
YW1lIj5DZW50cmFsIDI0LTIgVGhyZXNob2xkIFRlc3Q8L3Rlc3RfbmFtZT4NCgkJICAgIDx0ZXN0
X3N0cmF0ZWd5IFZSPSJMTyIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MDIi
IGNvZGVNZWFuaW5nPSJUZXN0IFN0cmF0ZWd5Ij5TSVRBLVN0YW5kYXJkPC90ZXN0X3N0cmF0ZWd5
Pg0KCQkgICAgPHN0aW11bHVzX3NpemUgVlI9IkNTIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2Rl
SWQ9Ijc3MTcsMTcwMyIgY29kZU1lYW5pbmc9IlN0aW11bHVzIFNpemUiPklJSTwvc3RpbXVsdXNf
c2l6ZT4NCgkJICAgIDxzdGltdWx1c19jb2xvciBWUj0iU0giIGNvZGluZ1NjaGVtZT0iOTlDWk0i
IGNvZGVJZD0iNzcxNywxNzA0IiBjb2RlTWVhbmluZz0iU3RpbXVsdXMgQ29sb3IiPldoaXRlPC9z
dGltdWx1c19jb2xvcj4NCgkJICAgIDxiYWNrZ3JvdW5kX3N0YXRlIFZSPSJTSCIgY29kaW5nU2No
ZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MDUiIGNvZGVNZWFuaW5nPSJCYWNrZ3JvdW5kIFN0
YXRlIj5XaGl0ZTwvYmFja2dyb3VuZF9zdGF0ZT4NCgkJICAgIDxmb3ZlYWxfcmVzdWx0IFZSPSJD
UyIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MDYiIGNvZGVNZWFuaW5nPSJG
b3ZlYWwgUmVzdWx0Ij5OT1QtVEVTVEVEPC9mb3ZlYWxfcmVzdWx0Pg0KCSAgICAgICAgPHNjcmVl
bmluZ19tb2RlIFZSPSJMTyIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MDci
IGNvZGVNZWFuaW5nPSJTY3JlZW5pbmcgTW9kZSI+PC9zY3JlZW5pbmdfbW9kZT4NCgkgICAgICAg
IDxwdXBpbF9kaWFtZXRlciBWUj0iRFMiIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0iNzcx
NywxNzI2IiBjb2RlTWVhbmluZz0iUHVwaWwgRGlhbWV0ZXIiPjwvcHVwaWxfZGlhbWV0ZXI+DQoJ
CSAgICA8dmlzdWFsX2FjdWl0eSBWUj0iU0giIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0i
NzcxNywxNzMwIiBjb2RlTWVhbmluZz0iVmlzdWFsIEFjdWl0eSI+PC92aXN1YWxfYWN1aXR5Pg0K
CSAgICAgICAgPGZpeGF0aW9uX21vbml0b3IgVlI9IkxPIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBj
b2RlSWQ9Ijc3MTcsMTcyNCIgY29kZU1lYW5pbmc9IkZpeGF0aW9uIE1vbml0b3IiPkdhemUvQmxp
bmQgU3BvdDwvZml4YXRpb25fbW9uaXRvcj4NCgkgICAgICAgIDxmaXhhdGlvbl90YXJnZXQgVlI9
IkxPIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2RlSWQ9Ijc3MTcsMTcyNSIgY29kZU1lYW5pbmc9
IkZpeGF0aW9uIFRhcmdldCI+Q2VudHJhbDwvZml4YXRpb25fdGFyZ2V0Pg0KCQkgICAgPGZpeGF0
aW9uX3RyaWFscyBWUj0iSVMiIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0iNzcxNywxNzA4
IiBjb2RlTWVhbmluZz0iRml4YXRpb24gVHJpYWxzIj4xNTwvZml4YXRpb25fdHJpYWxzPg0KCQkg
ICAgPGZpeGF0aW9uX2Vycm9ycyBWUj0iSVMiIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0i
NzcxNywxNzA5IiBjb2RlTWVhbmluZz0iRml4YXRpb24gRXJyb3JzIj4yPC9maXhhdGlvbl9lcnJv
cnM+DQoJCSAgICA8ZmFsc2VfcG9zaXRpdmVzPg0KCQkJICAgIDxmYWxzZV9wb3NpdGl2ZV9wZXJj
ZW50IFZSPSJEUyIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MTAiIGNvZGVN
ZWFuaW5nPSJGYWxzZSBQb3NpdGl2ZSBQZXJjZW50Ij4yMDwvZmFsc2VfcG9zaXRpdmVfcGVyY2Vu
dD4NCgkJCSAgICA8L2ZhbHNlX3Bvc2l0aXZlcz4NCgkJICAgIDxmYWxzZV9uZWdhdGl2ZXM+DQoJ
CQkgICAgPGZhbHNlX25lZ2F0aXZlX3BlcmNlbnQgVlI9IkRTIiBjb2RpbmdTY2hlbWU9Ijk5Q1pN
IiBjb2RlSWQ9Ijc3MTcsMTcxMyIgY29kZU1lYW5pbmc9IkZhbHNlIE5lZ2F0aXZlIFBlcmNlbnQi
Pjc8L2ZhbHNlX25lZ2F0aXZlX3BlcmNlbnQ+DQoJCQkgICAgPC9mYWxzZV9uZWdhdGl2ZXM+DQoJ
CSAgICA8dHJpYWxfcng+DQoJCQkgICAgPHNwaGVyZSBWUj0iRFMiIGNvZGluZ1NjaGVtZT0iOTlD
Wk0iIGNvZGVJZD0iNzcxNywxNzI3IiBjb2RlTWVhbmluZz0iU3BoZXJlIj4rMy4yNTwvc3BoZXJl
Pg0KCQkJICAgIDxjeWxpbmRlciBWUj0iRFMiIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0i
NzcxNywxNzI4IiBjb2RlTWVhbmluZz0iQ3lsaW5kZXIiPjwvY3lsaW5kZXI+DQoJCQkgICAgPGF4
aXMgVlI9IklTIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2RlSWQ9Ijc3MTcsMTcyOSIgY29kZU1l
YW5pbmc9IkF4aXMiPjwvYXhpcz4NCgkJICAgIDwvdHJpYWxfcng+DQoJICAgIDwvQ1pNX0hGQV9T
ZXJpZXNfTT4NCiAgICAgICAgPENaTV9IRkFfQW5hbHlzaXNfTT4NCgkJICAgIDxtZWFuX2Rldmlh
dGlvbiBWUj0iRFMiIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJZD0iNzcxNywxNzE2IiBjb2Rl
TWVhbmluZz0iTWVhbiBEZXZpYXRpb24iPi0wLjUyPC9tZWFuX2RldmlhdGlvbj4NCgkJICAgIDxt
ZWFuX2RldmlhdGlvbl9wcm9iYWJpbGl0eSBWUj0iU0giIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNv
ZGVJZD0iNzcxNywxNzE3IiBjb2RlTWVhbmluZz0iTWVhbiBEZXZpYXRpb24gUHJvYmFiaWxpdHki
Pk5vdCBTaWduaWZpY2FudDwvbWVhbl9kZXZpYXRpb25fcHJvYmFiaWxpdHk+DQoJCSAgICA8cGF0
dGVybl9zdGFuZGFyZF9kZXZpYXRpb24gVlI9IkRTIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2Rl
SWQ9Ijc3MTcsMTcxOCIgY29kZU1lYW5pbmc9IlBhdHRlcm4gU3RhbmRhcmQgRGV2aWF0aW9uIj4y
LjAzPC9wYXR0ZXJuX3N0YW5kYXJkX2RldmlhdGlvbj4NCgkJICAgIDxwYXR0ZXJuX3N0YW5kYXJk
X2RldmlhdGlvbl9wcm9iYWJpbGl0eSBWUj0iU0giIGNvZGluZ1NjaGVtZT0iOTlDWk0iIGNvZGVJ
ZD0iNzcxNywxNzE5IiBjb2RlTWVhbmluZz0iUGF0dGVybiBTdGFuZGFyZCBEZXZpYXRpb24gUHJv
YmFiaWxpdHkiPnAgJmx0OyA1JTwvcGF0dGVybl9zdGFuZGFyZF9kZXZpYXRpb25fcHJvYmFiaWxp
dHk+DQoJCSAgICA8c2hvcnRfdGVybV9mbHVjdHVhdGlvbiBWUj0iRFMiIGNvZGluZ1NjaGVtZT0i
OTlDWk0iIGNvZGVJZD0iNzcxNywxNzIwIiBjb2RlTWVhbmluZz0iU2hvcnQtdGVybSBGbHVjdHVh
dGlvbiI+PC9zaG9ydF90ZXJtX2ZsdWN0dWF0aW9uPg0KCQkgICAgPHNob3J0X3Rlcm1fZmx1Y3R1
YXRpb25fcHJvYmFiaWxpdHkgVlI9IlNIIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBjb2RlSWQ9Ijc3
MTcsMTczMSIgY29kZU1lYW5pbmc9IlNob3J0LXRlcm0gRmx1Y3R1YXRpb24gUHJvYmFiaWxpdHki
Pjwvc2hvcnRfdGVybV9mbHVjdHVhdGlvbl9wcm9iYWJpbGl0eT4NCgkJICAgIDxjb3JyZWN0ZWRf
cGF0dGVybl9zdGFuZGFyZF9kZXZpYXRpb24gVlI9IkRTIiBjb2RpbmdTY2hlbWU9Ijk5Q1pNIiBj
b2RlSWQ9Ijc3MTcsMTcyMSIgY29kZU1lYW5pbmc9IkNvcnJlY3RlZCBQYXR0ZXJuIFN0YW5kYXJk
IERldmlhdGlvbiI+PC9jb3JyZWN0ZWRfcGF0dGVybl9zdGFuZGFyZF9kZXZpYXRpb24+DQoJCSAg
ICA8Y29ycmVjdGVkX3BhdHRlcm5fc3RhbmRhcmRfZGV2aWF0aW9uX3Byb2JhYmlsaXR5IFZSPSJT
SCIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzE3LDE3MjIiIGNvZGVNZWFuaW5nPSJD
b3JyZWN0ZWQgUGF0dGVybiBTdGFuZGFyZCBEZXZpYXRpb24gUHJvYmFiaWxpdHkiPjwvY29ycmVj
dGVkX3BhdHRlcm5fc3RhbmRhcmRfZGV2aWF0aW9uX3Byb2JhYmlsaXR5Pg0KICAgIAkgICAgPGds
YXVjb21hX2hlbWlmaWVsZF90ZXN0IFZSPSJMTyIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlk
PSI3NzE3LDE3MjMiIGNvZGVNZWFuaW5nPSJHbGF1Y29tYSBIZW1pZmllbGQgVGVzdCI+Qm9yZGVy
bGluZTwvZ2xhdWNvbWFfaGVtaWZpZWxkX3Rlc3Q+DQogICAgCTwvQ1pNX0hGQV9BbmFseXNpc19N
Pg0KCSAgICA8R2VuZXJhbEltYWdlX00+DQoJCSAgICA8aW5zdGFuY2VfbnVtYmVyIFZSPSJJUyIg
Y29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAyMCwwMDEzIiBjb2RlTWVhbmluZz0iSW5zdGFu
Y2UgTnVtYmVyIj4wMDE8L2luc3RhbmNlX251bWJlcj4NCgkJICAgIDxjb250ZW50X2RhdGUgVlI9
IkRBIiBjb2RpbmdTY2hlbWU9IkRDTSIgY29kZUlkPSIwMDA4LDAwMjMiIGNvZGVNZWFuaW5nPSJD
b250ZW50IERhdGUiLz4NCgkJICAgIDxjb250ZW50X3RpbWUgVlI9IlRNIiBjb2RpbmdTY2hlbWU9
IkRDTSIgY29kZUlkPSIwMDA4LDAwMzMiIGNvZGVNZWFuaW5nPSJDb250ZW50IFRpbWUiLz4NCgkJ
ICAgIDxpbWFnZV90eXBlIFZSPSJDUyIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCww
MDA4IiBjb2RlTWVhbmluZz0iSW1hZ2UgVHlwZSI+DQoJCQkgICAgPHZhbHVlLz4NCgkJICAgIDwv
aW1hZ2VfdHlwZT4NCgkJICAgIDxkZXJpdmF0aW9uX2Rlc2NyaXB0aW9uIFZSPSJTVCIgY29kaW5n
U2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAwOCwyMTExIiBjb2RlTWVhbmluZz0iRGVyaXZhdGlvbiBE
ZXNjcmlwdGlvbiI+U0ZBPC9kZXJpdmF0aW9uX2Rlc2NyaXB0aW9uPg0KCQkgICAgPGltYWdlX2Nv
bW1lbnRzIFZSPSJMVCIgY29kaW5nU2NoZW1lPSJEQ00iIGNvZGVJZD0iMDAyMCw0MDAwIiBjb2Rl
TWVhbmluZz0iSW1hZ2UgQ29tbWVudHMiLz4NCgkgICAgPC9HZW5lcmFsSW1hZ2VfTT4NCgkgICAg
PFJlZmVyZW5jZWRJbWFnZV9NPg0KCQkgICAgPHRyYW5zZmVyX3Byb3RvY29sIFZSPSJDUyIgY29k
aW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzExLDExMDQiIGNvZGVNZWFuaW5nPSJDWk0gVHJh
bnNmZXIgUHJvdG9jb2wiPkZJTEU8L3RyYW5zZmVyX3Byb3RvY29sPg0KCQkgICAgPHNlcnZlcl9u
YW1lIFZSPSJMVCIgY29kaW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzExLDExMDkiIGNvZGVN
ZWFuaW5nPSJTZXJ2ZXIgTmFtZSIvPg0KCQkgICAgPGZpbGVfcmVmZXJlbmNlIFZSPSJMVCIgY29k
aW5nU2NoZW1lPSI5OUNaTSIgY29kZUlkPSI3NzExLDExMDgiIGNvZGVNZWFuaW5nPSJGaWxlIFJl
ZmVyZW5jZSI+U0ZHXzIwMTEwMzAzXzEzMTQ1OF9PRF83NDAxNTg1Ml9TRkEucGRmPC9maWxlX3Jl
ZmVyZW5jZT4NCgkJICAgIDx0eXBlX2lkZW50aWZpZXIgVlI9IkNTIiBjb2RpbmdTY2hlbWU9Ijk5
Q1pNIiBjb2RlSWQ9Ijc3MTEsMTEwNyIgY29kZU1lYW5pbmc9IlR5cGUgSWRlbnRpZmllciI+UERG
PC90eXBlX2lkZW50aWZpZXI+DQoJICAgIDwvUmVmZXJlbmNlZEltYWdlX00+DQogICAgPC9DWk1f
SEZBX0VNUl9JT0Q+DQogPC9EYXRhU2V0Pg0KPC9DWk0tWE1MPg==</inboundTemplate>
      <outboundTemplate encoding="base64">PHZmYT4KCTxwaWQ+PC9waWQ+Cgk8YmlydGhEYXRlPjwvYmlydGhEYXRlPgoJPGdlbmRlcj48L2dl
bmRlcj4KCTxmYW1pbHlOYW1lPjwvZmFtaWx5TmFtZT4KCTxnaXZlbk5hbWU+PC9naXZlbk5hbWU+
Cgk8bWlkZGxlTmFtZT48L21pZGRsZU5hbWU+Cgk8ZmlsZVJlZmVyZW5jZT48L2ZpbGVSZWZlcmVu
Y2U+Cgk8c3R1ZHlEYXRlPjwvc3R1ZHlEYXRlPgoJPHN0dWR5VGltZT48L3N0dWR5VGltZT4KCTxl
eWU+PC9leWU+Cgk8dGVzdFN0cmF0ZWd5PjwvdGVzdFN0cmF0ZWd5Pgo8L3ZmYT4=</outboundTemplate>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">true</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">true</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.2.1.5861</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Destination 1</name>
      <properties>
        <property name="DataType">Database Writer</property>
        <property name="URL">_OE_DB_URL</property>
        <property name="driver">_OE_DB_DRIVER_</property>
        <property name="host">query</property>
        <property name="password">_OE_DB_PASSWORD_</property>
        <property name="query"></property>
        <property name="script">var f = new java.io.File(new java.io.File(globalMap.get(&apos;OE_VFA_TEXT_IN&apos;)), $(&apos;originalFilename&apos;));
var fileId = getFileId(f);

var dbConn = getDbConnection();

var data = new XML(messageObject.getTransformedData());
var sql = &quot;INSERT INTO &quot;
	+ globalMap.get(&apos;OE_DB_SERVICE_BUS_VFA_XML_INFO&apos;)
	+ &quot; (file_id, pid, eye, gender, birth_date, study_date, study_time, given_name, middle_name, family_name, file_name, test_strategy)&quot;
    + &quot; VALUES (&quot; +  fileId + &quot;, &apos;&quot; 
	+ data[&apos;pid&apos;] + &quot;&apos;&quot; + &quot;,&quot;
    + &quot;&apos;&quot; + data[&apos;eye&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;gender&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;birthDate&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;studyDate&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;studyTime&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;givenName&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;middleName&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;familyName&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;fileReference&apos;] + &quot;&apos;,&quot;
    + &quot;&apos;&quot; + data[&apos;testStrategy&apos;] + &quot;&apos;)&quot;

try {
	var result = dbConn.executeUpdate(sql);
} catch(err) {
	log(channelId, &quot;error&quot;, err);
} finally {
	dbConn.close();
}</property>
        <property name="useScript">1</property>
        <property name="username">_OE_DB_USER_</property>
      </properties>
      <transformer>
        <steps/>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
message = message.replace(&quot;&lt;CZM-XML xmlns=\&quot;http://www.meditec.zeiss.com/czm\&quot; xmlns:xsi=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot; xsi:schemaLocation=\&quot;http://www.meditec.zeiss.com/CZM-XML-Root.xsd\&quot;&gt;&quot;, &quot;&lt;CZM-XML&gt;&quot;);

var filename = muleContext.getMessage().getProperty(&quot;originalFilename&quot;);

var f = new java.io.File(new java.io.File(globalMap.get(&apos;OE_VFA_TEXT_IN&apos;)), filename);
var size = f.length();

var fileId = addFile(f);

fileAudit(&apos;i&apos;, &apos;f&apos;, new java.io.File(globalMap.get(&apos;OE_VFA_TEXT_IN&apos;)), f, null, null, size, -1);
return message;</preprocessingScript>
  <postprocessingScript>var filename = channelMap.get(&quot;originalFilename&quot;);

var f = new java.io.File(new java.io.File(globalMap.get(&apos;OE_VFA_TEXT_IN&apos;)), filename);
var systime = new java.util.Date().getTime();
var fout = new java.io.File(new java.io.File(globalMap.get(&apos;OE_VFA_TEXT_OUT&apos;)), systime + &quot;-&quot; + filename);

fileLocationChange(&apos;move&apos;, f.getAbsolutePath(), fout.getAbsolutePath(), globalMap.get(&apos;OE_VFA_TEXT_ERR&apos;));

return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>